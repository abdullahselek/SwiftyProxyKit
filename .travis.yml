language: objective-c
osx_image: xcode9

env:
  global:
  - LC_CTYPE=en_US.UTF-8
  - LANG=en_US.UTF-8
  - WORKSPACE=SwiftyProxyKit.xcworkspace
  - IOS_FRAMEWORK_SCHEME=“SwiftyProxyKit”
  - IOS_SDK=iphonesimulator11.0
  matrix:
    - DESTINATION=“OS=11.0,name=iPhone 8” SCHEME=“$IOS_FRAMEWORK_SCHEME” SDK=“$IOS_SDK” RUN_TESTS=“YES” POD_LINT=“NO”
    - DESTINATION=“OS=10.3.1,name=iPhone 6” SCHEME=“$IOS_FRAMEWORK_SCHEME” SDK=“$IOS_SDK” RUN_TESTS=“YES” POD_LINT=“NO”
    - DESTINATION=“OS=9.3,name=iPhone 5” SCHEME=“$IOS_FRAMEWORK_SCHEME” SDK=“$IOS_SDK” RUN_TESTS=“YES” POD_LINT=“NO”

before_install:
- rvm use $RVM_RUBY_VERSION

install:
- bundle install

script: 
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks

# Build Framework in Debug and Run Tests if specified
  - if [ $RUN_TESTS == “YES” ]; then
      travis_retry xcodebuild -workspace “$WORKSPACE” -scheme “$SCHEME” -sdk “$SDK” -destination “$DESTINATION” -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty;
    else
      xcodebuild -workspace “$WORKSPACE” -scheme “$SCHEME” -sdk “$SDK” -destination “$DESTINATION” -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty;
    fi

after_success: 
  - slather
  - bash <(curl -s https://codecov.io/bash) -f test/xml_report/cobertura.xml -X coveragepy -X gcov -X xcode
